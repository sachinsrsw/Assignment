# 1.1 Write a Python Program to implement your own myreduce() function which works exactly like Python's built-in function reduce()

Answer:

    def myreduce(function,iter):
      y = iter[0]
      for x in iter[1:]:
        y =  function(y,x)
      return y

    n = lambda x,y: x+y
    myreduce(n,[1,2,3,4,5])

# 1.2 Write a Python program to implement your own myfilter() function which works exactly like Python's built-in function filter().

Answer:

  def myfilter(function,iter):
    m = []
    for i in iter:
      if function(i):
        m.append(i)
    return m
  
myfilter(lambda x : x>3, [1,2,4,7,8,3])

# 2) Implement List comprehensions to produce the following lists. Write List comprehensions to produce the following Lists:
     a) ['x', 'xx', 'xxx', 'xxxx', 'y', 'yy', 'yyy', 'yyyy', 'z', 'zz', 'zzz', 'zzzz']

     b) ['x', 'y', 'z', 'xx', 'yy', 'zz', 'xxx', 'yyy', 'zzz', 'xxxx', 'yyyy', 'zzzz']

     c) [[2], [3], [4], [3], [4], [5], [4], [5], [6]]

     d) [[2, 3, 4, 5], [3, 4, 5, 6],[4, 5, 6, 7], [5, 6, 7, 8]]

     e) [(1, 1), (2, 1), (3, 1), (1, 2), (2, 2), (3, 2), (1, 3), (2, 3), (3, 3)]
     
     
     # a)
        m = ['x','y','z'] 
        result = [i*num for num in m for i in range(1,5)]
        print(result)
        
     # b)
        m = ['x','y','z']
        result_b = [i*j for i in range(1,5) for j in m]
        result_b
        
     # c)
        k = [2,3,4]
        result_c = [[i+j] for i in k for j in range(0,3)]
        result_c
       
     # d)
        l = [2,3,4,5]
        results_d = [[i + j for i in l] for j in range(0,4) ] 
        results_d
        
     # e)
        result_e = [(x,y) for y in range(1,4) for x in range(1,4) ]
        result_e

